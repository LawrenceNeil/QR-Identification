[{"C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\index.js":"1","C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\App.jsx":"2","C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\components\\Dashboard.jsx":"3","C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\components\\Mainbar.jsx":"4","C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\components\\LeftSidebar.jsx":"5","C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\components\\RightSidebar.jsx":"6","C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\components\\styles\\Dashboard.styled.jsx":"7","C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\components\\styles\\Global.styled.jsx":"8","C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\components\\styles\\LeftSidebar.styled.jsx":"9","C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\pages\\Home.jsx":"10","C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\pages\\About.jsx":"11"},{"size":290,"mtime":1665539588875,"results":"12","hashOfConfig":"13"},{"size":131,"mtime":1665462804152,"results":"14","hashOfConfig":"13"},{"size":669,"mtime":1665541472294,"results":"15","hashOfConfig":"13"},{"size":1236,"mtime":1665468895543,"results":"16","hashOfConfig":"13"},{"size":1641,"mtime":1665541600273,"results":"17","hashOfConfig":"13"},{"size":137,"mtime":1665459592467,"results":"18","hashOfConfig":"13"},{"size":770,"mtime":1665464456714,"results":"19","hashOfConfig":"13"},{"size":602,"mtime":1665462627612,"results":"20","hashOfConfig":"13"},{"size":771,"mtime":1665541595326,"results":"21","hashOfConfig":"13"},{"size":278,"mtime":1665462790558,"results":"22","hashOfConfig":"13"},{"size":116,"mtime":1665539712089,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zlocps",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\index.js",[],[],"C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\App.jsx",[],[],[],"C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\components\\Dashboard.jsx",[],[],"C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\components\\Mainbar.jsx",["59","60"],[],"import React, { useEffect, useState } from 'react'\r\n\r\n\r\nconst Mainbar = ({ text }) => {\r\n  const [temp, setTemp] = useState(\"\");\r\n  const [word, setWord] = useState(\"\");\r\n  const [size, setSize] = useState(177);\r\n  const [bgColor, setBgColor] = useState(\"ffffff\");\r\n  const [qrCode, setQrCode] = useState(\"\");\r\n\r\n  const crypto = require(\"crypto-js/sha256\");\r\n  const hash = crypto(temp).toString();\r\n\r\n  useEffect(() => {\r\n    setQrCode\r\n    (`http://api.qrserver.com/v1/create-qr-code/?data=${word}&size=${size}x${size}&bgcolor=${bgColor}`);\r\n  }, [word, size, bgColor]);\r\n\r\n  function handleClick() {\r\n    setWord(hash);\r\n  }\r\n  console.log(hash);\r\n  return (\r\n    <>\r\n    <div className=\"App\">\r\n      <h1>QR Code Generator</h1>\r\n      <div className=\"input-box\">\r\n        <div className=\"gen\">\r\n          <input type=\"text\" onChange={\r\n            (e) => {setTemp(e.target.value)}}\r\n            placeholder=\"Enter text to encode\" />\r\n          <button className=\"button\" \r\n            onClick={handleClick}>\r\n            Generate\r\n          </button>\r\n        </div>\r\n        \r\n      </div>\r\n      <div className=\"output-box\">\r\n        <img src={qrCode} alt=\"\" />\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mainbar","C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\components\\LeftSidebar.jsx",[],[],"C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\components\\RightSidebar.jsx",[],[],"C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\components\\styles\\Dashboard.styled.jsx",[],[],"C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\components\\styles\\Global.styled.jsx",[],[],"C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\components\\styles\\LeftSidebar.styled.jsx",[],[],"C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\pages\\Home.jsx",[],[],"C:\\Users\\limbo\\Desktop\\qr-identification-system\\src\\pages\\About.jsx",[],[],{"ruleId":"61","severity":1,"message":"62","line":7,"column":16,"nodeType":"63","messageId":"64","endLine":7,"endColumn":23},{"ruleId":"61","severity":1,"message":"65","line":8,"column":19,"nodeType":"63","messageId":"64","endLine":8,"endColumn":29},"no-unused-vars","'setSize' is assigned a value but never used.","Identifier","unusedVar","'setBgColor' is assigned a value but never used."]